{# Base layout #}
<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        {# Use title from front matter or provide a default #}
        <title>{{ title or "ESBD Visualization" }}</title>
        <link rel="icon" href="/img/favicon.ico" />

        {# Link to your CSS file (path relative to output site root) #}
        <link rel="stylesheet" href="/css/style.css" />

        {# KaTeX CSS & JS (Core + Auto-render) #}
        <link
            rel="stylesheet"
            href="https://cdn.jsdelivr.net/npm/katex@0.16.21/dist/katex.min.css"
            integrity="sha384-zh0CIslj+VczCZtlzBcjt5ppRcsAmDnRem7ESsYwWwg3m/OaJ2l4x7YBZl9Kxxib"
            crossorigin="anonymous"
        />
        <!-- The loading of KaTeX is deferred to speed up page rendering -->
        <script
            defer
            src="https://cdn.jsdelivr.net/npm/katex@0.16.21/dist/katex.min.js"
            integrity="sha384-Rma6DA2IPUwhNxmrB/7S3Tno0YY7sFu9WSYMCuulLhIqYSGZ2gKCJWIqhBWqMQfh"
            crossorigin="anonymous"
        ></script>
        <!-- To automatically render math in text elements, include the auto-render extension: -->
        <script
            defer
            src="https://cdn.jsdelivr.net/npm/katex@0.16.21/dist/contrib/auto-render.min.js"
            integrity="sha384-hCXGrW6PitJEwbkoStFjeJxv+fSOOQKOPbJxSfM6G5sWZjAyWhXiTIIAmQqnlLlh"
            crossorigin="anonymous"
        ></script>

        {# KaTeX auto render hook - although we use markdown-it-katex, this
        catches any stragglers in e.g. html #}
        <script>
            // Optional: Customize KaTeX auto-render delimiters if needed
            document.addEventListener('DOMContentLoaded', function () {
                renderMathInElement(document.body, {
                    delimiters: [
                        { left: '$$', right: '$$', display: true },
                        { left: '$', right: '$', display: false },
                        { left: '\\(', right: '\\)', display: false },
                        { left: '\\[', right: '\\]', display: true },
                    ],
                    throwOnError: false,
                });
            });
        </script>

        {# D3 Library #}
        <script src="https://cdn.jsdelivr.net/npm/d3@7"></script>
    </head>
    <body>


 {# === Get Previous/Next Logic === #}
  {% set currentCollection = collections.esbd_topic %} {# Use the sorted collection #}
  {% set currentPageUrl = page.url %} {# URL of the current page #}
  {% set currentIndex = -1 %} {# Default value if not found #}
  {% set prevPage = null %}
  {% set nextPage = null %}

  {# Find the index of the current page within the sorted collection #}
  {% for item in currentCollection %} {# Iterate through all items #}
    {% if item.url == currentPageUrl %}
      {% set currentIndex = loop.index0 %} {# Assign index when match found #}
      {# No break - loop continues, but currentIndex now has the right value #}
    {% endif %}
  {% endfor %} {# Loop finishes naturally #}

  {# Assign previous and next pages if found and within bounds #}
  {% if currentIndex > 0 %} {# Check if not the first item #}
    {% set prevPage = currentCollection[currentIndex - 1] %}
  {% endif %}
  {% if currentIndex >= 0 and currentIndex < currentCollection.length - 1 %} {# Check if not the last item #}
    {% set nextPage = currentCollection[currentIndex + 1] %}
  {% endif %}
  {# === End Logic === #}
  {# --- Top Navigation --- #}
  

{#        <header>
            <h1><a href="/esbd/">ESBD Visualizations</a></h1>
            <hr />
        </header> #}

        {# NEW: Wrapper div for the main layout columns #}
        <div class="layout-wrapper">

            {# Sidebar Navigation #}
            <nav class="site-nav">
                <h3>Navigation</h3> {# Optional heading #}
                {# Render the Eleventy Navigation menu here #}
                {# Example using a simple list #}
                <ul>
                    {%- for entry in collections.all | eleventyNavigation %}
                    <li><a href="{{ entry.url | url }}"{% if entry.url == page.url %} aria-current="page"{% endif %}>{{ entry.title }}</a></li>
                    {%- endfor %}
                </ul>
                {# Or use the filter for nested lists if you have hierarchy: #}
                {# {{ collections.all | eleventyNavigation | eleventyNavigationToHtml | safe }} #}
            </nav>

            {# Main Content Area #}
            <div>

  <nav class="pagination-nav top-nav">
    {% if prevPage %}
      <a href="{{ prevPage.url | url }}">&lt;- {{ prevPage.data.title | escape }}</a>
    {% else %}
      <span></span> {# Empty span for layout consistency #}
    {% endif %}
    <span>~~~</span>
    {% if nextPage %}
      <a href="{{ nextPage.url | url }}">{{ nextPage.data.title | escape }} -&gt;</a>
    {% else %}
      <span></span> {# Empty span for layout consistency #}
    {% endif %}
  </nav>
            <main>

                {# Content from individual pages goes here #}
                {{ content | safe }}
            </main>
            </div>

        </div> {# End layout-wrapper #}

        <footer>
            <hr />
            {# Optional: Add a consistent site footer here #}
            <p><small>Made with 11ty, KaTeX, D3, and help from some LLMs.</small></p>
        </footer>
    </body>
</html>
